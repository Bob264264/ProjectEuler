package Project_Euler;

public class Problem_12 {
/*
 * 
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

What is the value of the first triangle number to have over five hundred divisors?
 * 	
 */
	
	public static int NUM = 0;
	public static void main(String[] args) {
		int number = 0;
		boolean reach = false;
		for (int i = 0; !reach ;i++){
			number = generateTriangle(i);
			System.out.println("Number: " + number);
			System.out.println("Factors: " + countFactors(number));
			if (countFactors(number) > 500)
				reach = true;
		}
		System.out.println(number);
	}
	
	public static int generateTriangle(int increment){
		NUM += increment;
		return NUM;	
	}
	
	public static int countFactors(int number){
		int factors = 1;
		for (int i = 1; i <= number/2; i++)
			if (number % i == 0)
				factors++;
		return factors;
	}
}
